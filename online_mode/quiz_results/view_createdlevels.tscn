[gd_scene load_steps=21 format=2]

[ext_resource path="res://inventory_system/data/resources/settings_data.tres" type="Resource" id=1]
[ext_resource path="res://resources/Themes/ui_theme1.tres" type="Theme" id=2]
[ext_resource path="res://inventory_system/resources/sprites/main panel.png" type="Texture" id=3]
[ext_resource path="res://online_mode/quiz_results/result_table.gd" type="Script" id=4]
[ext_resource path="res://resources/Themes/ui_theme2.tres" type="Theme" id=5]
[ext_resource path="res://resources/Game buttons/export_excel.png" type="Texture" id=6]
[ext_resource path="res://resources/font/OpenSans-Bold.ttf" type="DynamicFontData" id=7]
[ext_resource path="res://resources/Themes/user_profile_buttons.tres" type="Theme" id=8]

[sub_resource type="GDScript" id=1]
script/source = "extends Node2D

var http_request : HTTPRequest = HTTPRequest.new()
const SERVER_URL = \"https://nwork.slarenasitsolutions.com/authentication.php\"
const SERVER_HEADERS = [\"Content-Type: application/x-www-form-urlencoded\", \"Cache-Control: max-age=0\"]
var request_queue : Array = []
var is_requesting : bool = false
onready var grid_container = $GridContainer
var headers = []  # Initialize headers as an empty array
export (Resource) var settings_data
onready var result_table = $result_table

func _ready():
	add_child(http_request)
	http_request.connect(\"request_completed\", self, \"_http_request_completed\")
	get_createlevels()
	
func _process(_delta):
	# Check if we have pending requests in the queue:
	if !request_queue.empty() and !is_requesting:
		var request = request_queue.pop_front()
		_send_request(request)
		
func _send_request(request : Dictionary):
	# Check if a request is already in progress
	if is_requesting:
		# If a request is already in progress, add the request to the queue
		request_queue.push_back(request)
		return

	is_requesting = true

	var client = HTTPClient.new()
	var data = client.query_string_from_dict({\"data\" : JSON.print(request['data'])})
	var body = \"command=\" + request['command'] + \"&\" + data

	# Make request to the server:
	var err = http_request.request(SERVER_URL, SERVER_HEADERS, false, HTTPClient.METHOD_POST, body)

	# Check if there were problems:
	if err != OK:
		printerr(\"HTTPRequest error: \" + String(err))
		return
		
func _http_request_completed(result, response_code, headers, body):
	is_requesting = false
	
	if result != HTTPRequest.RESULT_SUCCESS:
		printerr(\"Error with connection: \" + str(result))
		$Label.text = \"No internet connection\"
		return
	
	var response_body = body.get_string_from_utf8()
	var response = parse_json(response_body)
	print(response)
	
	if response is Array:
		if response.size() > 0:
			var data = response  # The response is an array of dictionaries
			headers = data[0].keys()
			display_table(data)
		else:
			print(\"JSON data is empty\")
			$Label.text = \"No quiz level created\"
	else:
		print(\"Invalid JSON response\")
		$Label.text = \"No quiz level created\"

func display_table(data):
	# Define your headers manually
	headers = [\"file_id\", \"file_name\", \"creator\"]

	# Clear the existing grid contents
	clear_grid()

	var font_resource = preload(\"res://resources/font/login_signup_font.tres\")
	var font_color = Color(0, 0, 0, 1)
	for j in range(headers.size()):
		var header_label = Label.new()
		header_label.text = headers[j]
		header_label.rect_min_size = Vector2(100, 30)  # Set the size here
		header_label.add_font_override(\"font\", font_resource)
		header_label.add_color_override(\"font_color\", font_color)
		grid_container.add_child(header_label)
		header_label.align = Label.ALIGN_CENTER  # Center-align text

	# Create and add data cells to subsequent rows
	for i in range(data.size()):
		var row = data[i]
		for j in range(headers.size()):
			if headers[j] == \"file_name\":  # Check if the header is \"email\"
				var cell_button = Button.new()  # Create a button for email addresses
				cell_button.text = str(row[headers[j]])  # Set the button text to the email address
				cell_button.rect_min_size = Vector2(200, 90)  # Set the size here
				var custom_load_theme = load(\"res://resources/Themes/user_profile_buttons.tres\")
				cell_button.theme = custom_load_theme
				cell_button.connect(\"pressed\", result_table, \"get_levelresult\", [row[headers[j]]])  # Connect the button press signal with email as an argument
				grid_container.add_child(cell_button)
			else:
				var cell_label = Label.new()  # Create a label for other data
				cell_label.text = str(row[headers[j]])
				cell_label.add_font_override(\"font\", font_resource)
				cell_label.add_color_override(\"font_color\", font_color)
				grid_container.add_child(cell_label)
				cell_label.align = Label.ALIGN_CENTER  # Center-align text


func clear_grid():
	# Remove all child nodes from the grid_container
	while grid_container.get_child_count() > 0:
		var child = grid_container.get_child(0)
		grid_container.remove_child(child)
		child.queue_free()
	
func get_createlevels():
	var creator = settings_data.email
	var command = \"get_createdlevels\"
	var data = {\"creator\": creator}
	print(data)
	request_queue.push_back({\"command\": command, \"data\": data})

func _on_exit_pressed():
	Load.load_scene(self, \"res://online_mode/createQuiz_sub-menu/createQuiz_sub-menu.tscn\")
"

[sub_resource type="DynamicFont" id=12]
size = 40
font_data = ExtResource( 7 )

[sub_resource type="StyleBoxEmpty" id=8]

[sub_resource type="StyleBoxFlat" id=2]
content_margin_left = 33.0
content_margin_right = 33.0
bg_color = Color( 1, 0.941176, 0, 1 )
border_width_left = 20
border_width_top = 20
border_width_right = 20
border_width_bottom = 20
border_color = Color( 0, 0, 0, 1 )
shadow_color = Color( 0, 0, 0, 1 )
shadow_size = 1
shadow_offset = Vector2( 20, 20 )

[sub_resource type="StyleBoxFlat" id=3]
bg_color = Color( 1, 0.941176, 0, 1 )
border_width_left = 20
border_width_top = 20
border_width_right = 20
border_width_bottom = 20
border_color = Color( 0, 0, 0, 1 )
expand_margin_left = 10.0
expand_margin_right = 10.0
shadow_color = Color( 0, 0, 0, 1 )
shadow_offset = Vector2( -20, 20 )

[sub_resource type="DynamicFont" id=4]
size = 60
font_data = ExtResource( 7 )

[sub_resource type="StyleBoxFlat" id=5]
content_margin_left = 35.0
bg_color = Color( 0.392157, 0.784314, 1, 1 )
border_width_left = 20
border_width_top = 20
border_width_right = 20
border_width_bottom = 20
border_color = Color( 0, 0, 0, 1 )
corner_radius_top_left = 20
corner_radius_top_right = 20
corner_radius_bottom_right = 20
corner_radius_bottom_left = 20

[sub_resource type="DynamicFont" id=9]
size = 40
font_data = ExtResource( 7 )

[sub_resource type="StyleBoxFlat" id=10]
bg_color = Color( 0.392157, 0.784314, 1, 1 )

[sub_resource type="StyleBoxFlat" id=11]
bg_color = Color( 0, 0, 0, 0 )

[sub_resource type="Theme" id=13]
Button/colors/font_color = Color( 0, 0, 0, 1 )
Button/colors/font_color_disabled = Color( 0, 0, 0, 0.2 )
Button/colors/font_color_focus = Color( 0, 0, 0, 1 )
Button/colors/font_color_hover = Color( 0, 0, 0, 1 )
Button/colors/font_color_pressed = Color( 0, 0, 0, 1 )
Button/fonts/font = SubResource( 12 )
Button/styles/focus = SubResource( 8 )
Button/styles/hover = SubResource( 2 )
Button/styles/normal = SubResource( 2 )
Button/styles/pressed = SubResource( 3 )
Label/fonts/font = SubResource( 12 )
LineEdit/colors/font_color = Color( 0, 0, 0, 1 )
LineEdit/fonts/font = SubResource( 4 )
LineEdit/styles/focus = SubResource( 5 )
LineEdit/styles/normal = SubResource( 5 )
LineEdit/styles/read_only = SubResource( 5 )
TextEdit/fonts/font = SubResource( 12 )
Tree/colors/font_color = Color( 0.180392, 0.180392, 0.180392, 1 )
Tree/colors/font_color_selected = Color( 0, 0, 0, 1 )
Tree/fonts/font = SubResource( 9 )
Tree/fonts/title_button_font = SubResource( 9 )
Tree/styles/bg = SubResource( 10 )
WindowDialog/styles/panel = SubResource( 11 )

[sub_resource type="GDScript" id=14]
script/source = "extends CanvasLayer


# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"


# Called when the node enters the scene tree for the first time.
func _ready():
	pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta):
#	pass


func _on_Button_pressed():
	$\".\".visible = false
"

[node name="levels_table" type="Node2D"]
script = SubResource( 1 )
settings_data = ExtResource( 1 )

[node name="background" type="TextureRect" parent="."]
margin_left = 181.0
margin_top = 119.0
margin_right = 393.0
margin_bottom = 331.0
rect_scale = Vector2( 7.39805, 4.33512 )
texture = ExtResource( 3 )

[node name="exit" type="Button" parent="."]
margin_left = 74.0
margin_top = 40.0
margin_right = 371.0
margin_bottom = 172.0
theme = ExtResource( 5 )
text = "back"

[node name="GridContainer" type="GridContainer" parent="."]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = 363.0
margin_top = 231.0
margin_right = 1564.0
margin_bottom = 934.0
custom_constants/vseparation = 10
custom_constants/hseparation = 100
columns = 3

[node name="Label" type="Label" parent="."]
margin_left = 572.0
margin_top = 481.0
margin_right = 612.0
margin_bottom = 549.0
theme = ExtResource( 2 )

[node name="result_table" type="CanvasLayer" parent="."]
visible = false
script = ExtResource( 4 )

[node name="TextureRect" type="TextureRect" parent="result_table"]
margin_left = 78.0
margin_top = 86.0
margin_right = 290.0
margin_bottom = 298.0
rect_scale = Vector2( 8.15828, 4.31344 )
texture = ExtResource( 3 )

[node name="GridContainer" type="GridContainer" parent="result_table"]
margin_left = 239.0
margin_top = 201.0
margin_right = 1712.0
margin_bottom = 887.0
rect_scale = Vector2( 0.949932, 1 )
custom_constants/vseparation = 0
custom_constants/hseparation = 100
columns = 4

[node name="back" type="Button" parent="result_table"]
margin_left = 53.0
margin_top = 43.0
margin_right = 205.0
margin_bottom = 175.0
focus_mode = 0
theme = ExtResource( 5 )
enabled_focus_mode = 0
text = "x"

[node name="Label" type="Label" parent="result_table"]
margin_left = 444.0
margin_top = 407.0
margin_right = 1439.0
margin_bottom = 677.0
theme = ExtResource( 2 )
align = 1
valign = 1
autowrap = true

[node name="export" type="Button" parent="result_table"]
margin_left = 1490.0
margin_top = 751.0
margin_right = 2142.0
margin_bottom = 1388.0
rect_scale = Vector2( 0.248574, 0.251832 )
focus_mode = 0
enabled_focus_mode = 0
icon = ExtResource( 6 )
flat = true

[node name="result" type="CanvasLayer" parent="."]

[node name="file_dialog_title" type="CanvasLayer" parent="."]
visible = false

[node name="ColorRect" type="ColorRect" parent="file_dialog_title"]
margin_left = -1.0
margin_right = 1922.0
margin_bottom = 175.0
color = Color( 0, 0, 0, 1 )

[node name="ColorRect2" type="ColorRect" parent="file_dialog_title"]
margin_left = 2.0
margin_top = 4.0
margin_right = 1917.0
margin_bottom = 155.0
color = Color( 0, 0.576471, 1, 1 )

[node name="Label" type="Label" parent="file_dialog_title"]
anchor_left = 0.5
anchor_right = 0.5
margin_left = -219.0
margin_top = 44.0
margin_right = 219.0
margin_bottom = 112.0
theme = ExtResource( 2 )
text = "Save Excel"

[node name="file_dialog" type="CanvasLayer" parent="."]
visible = false

[node name="PanelContainer" type="PanelContainer" parent="file_dialog"]
margin_left = 4.0
margin_top = 237.0
margin_right = 1918.0
margin_bottom = 1077.0
theme = ExtResource( 2 )

[node name="FileDialog" type="FileDialog" parent="file_dialog"]
visible = true
margin_left = 24.0
margin_top = 280.0
margin_right = 1883.0
margin_bottom = 1039.0
rect_min_size = Vector2( 150, 52.5 )
theme = SubResource( 13 )

[node name="message_prompt" type="CanvasLayer" parent="."]
visible = false
script = SubResource( 14 )

[node name="TextureRect" type="TextureRect" parent="message_prompt"]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -563.0
margin_top = -201.0
margin_right = -351.0
margin_bottom = 11.0
rect_scale = Vector2( 5.4461, 2.03904 )
texture = ExtResource( 3 )

[node name="message" type="Label" parent="message_prompt"]
margin_left = 484.0
margin_top = 382.0
margin_right = 1469.0
margin_bottom = 733.0
theme = ExtResource( 2 )
text = "The file was success save in "
align = 1
valign = 1
autowrap = true

[node name="Button" type="Button" parent="message_prompt"]
margin_left = 837.0
margin_top = 803.0
margin_right = 1093.0
margin_bottom = 878.0
focus_mode = 0
theme = ExtResource( 8 )
enabled_focus_mode = 0
text = "confirm"

[connection signal="pressed" from="exit" to="." method="_on_exit_pressed"]
[connection signal="pressed" from="result_table/back" to="result_table" method="_on_back_pressed"]
[connection signal="pressed" from="result_table/export" to="result_table" method="_on_export_pressed"]
[connection signal="custom_action" from="file_dialog/FileDialog" to="result_table" method="_on_FileDialog_custom_action"]
[connection signal="popup_hide" from="file_dialog/FileDialog" to="result_table" method="_on_FileDialog_popup_hide"]
[connection signal="pressed" from="message_prompt/Button" to="message_prompt" method="_on_Button_pressed"]
